All questions are optional, though try to answer at least 4. The main goal of this file is to get you thinking critically about your own work, but we will also use these self reflections at the end of the semester when we do our internal review of the course.

ArrayDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: 

Q: What's something you felt proud of in your code, if anything?

A: I've checked some imposible cases in some methods, which helps a lot. I used RFACTOR instead of 2.

Q: What's something that was particularly inelegant in your code, if anything?

A: No comments. Some implementation does not reuse the method; more empty lines can be added to make the structure more clear.

Q: What did you learn by talking to your partner about writing ArrayDeque?

A:

Q: What do you wish you would have known before writing ArrayDeque, if anything?

A: The basic parameters that are necessary. And the picture to help understand.

Q: If you wrote ArrayDeque again, what would you do differently, if anything?

A:

-----

LinkedListDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: 

Q: What's something you felt proud of in your code, if anything?

A: Deal with remove null with a warning. Use size-- to improve efficiency.

Q: What's something that was particularly inelegant in your code, if anything?

A: No comments or notes.

Q: What did you learn by talking to your partner about writing LinkedListDeque?

A:

Q: What do you wish you would have known before writing LinkedListDeque, if anything?

A: The general case and special case (nothing in the list). Their action and the similarity.

Q: If you wrote LinkedListDeque again, what would you do differently, if anything?

A:

-----

Meta:

Q: Did you like this design review process? Anything we should do differently next time?

A: Absolutely yes!